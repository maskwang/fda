var JsCrypt = require('./core').JsCrypt;

// create custom json serialization format
var JsonFormatter = {
    objectify:function (cipherParams) {
        // create json object with ciphertext
        var jsonObj = {
            ct:cipherParams.ciphertext.toString(JsCrypt.enc.Base64)
        };

        // optionally add iv and salt
        if (cipherParams.iv) {
            jsonObj.iv = cipherParams.iv.toString();
        }

        if (cipherParams.salt) {
            jsonObj.s = cipherParams.salt.toString();
        }

        return jsonObj;
    },

    stringify:function (cipherParams) {
        // create json object with ciphertext
        var jsonObj = JsonFormatter.objectify(cipherParams);

        // stringify json object
        return JSON.stringify(jsonObj)
    },

    parse:function (jsonStr) {
        // parse json string
        var jsonObj = JSON.parse(jsonStr);

        // extract ciphertext from json object, and create cipher params object
        var cipherParams = JsCrypt.lib.CipherParams.create({
            ciphertext:JsCrypt.enc.Base64.parse(jsonObj.ct)
        });

        // optionally extract iv and salt
        if (jsonObj.iv) {
            cipherParams.iv = JsCrypt.enc.Hex.parse(jsonObj.iv);
        }

        if (jsonObj.s) {
            cipherParams.salt = JsCrypt.enc.Hex.parse(jsonObj.s);
        }

        return cipherParams;
    }
};

exports.JsonFormatter = JsonFormatter;