{"ts":1360132581806,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360132583954,"patch":[[{"diffs":[[1,"/**\r\n JSON obj to xml string.\r\n */\r\nexports.xmlstringify = function (json) {\r\n    var spacialChars = [/&/g, /</g, />/g, /\\\"/g, /'/g];\r\n    var validChars = [\"&amp;\", \"&lt;\", \"&gt;\", \"&quot;\", \"&apos;\"];\r\n    var replaceSpecialChar = function (s) {\r\n        if (s) {\r\n            for (var i = 0; i < spacialChars.length; i++) {\r\n                s = s.replace(spacialChars[i], validChars[i]);\r\n            }\r\n            return s;\r\n        }\r\n    };\r\n\r\n    var convert = function (buffer, json) {\r\n        for (var tag in json) {\r\n            //need to handle Array object specially\r\n            if (json[tag].constructor == Array) {\r\n                for (var i = 0; i < json[tag].length; i++) {\r\n                    buffer.push(\"<\" + tag + \">\");\r\n                    var item = json[tag][i];\r\n                    if (item.constructor == Object) {\r\n                        convert(buffer, item);\r\n                    }\r\n                    else if (item.constructor == Array) {\r\n                        var obj = {};\r\n                        obj[tag] = item;\r\n                        convert(buffer, obj);\r\n                    }\r\n                    else if (item.constructor == String) {\r\n                        buffer.push(replaceSpecialChar(item));\r\n                    }\r\n                    buffer.push(\"</\" + tag + \">\");\r\n                }\r\n            }\r\n            else {\r\n                buffer.push(\"<\" + tag + \">\");\r\n                if (json[tag].constructor == Object) {\r\n                    convert(buffer, json[tag]);\r\n                }\r\n                else if (json[tag].constructor == String) {\r\n                    buffer.push(replaceSpecialChar(json[tag]));\r\n                }\r\n                buffer.push(\"</\" + tag + \">\");\r\n            }\r\n        }\r\n        return buffer;\r\n    };\r\n\r\n    var buffer = [\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\"];\r\n    return convert(buffer, json).join(\"\");\r\n};\r\n\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1923}]],"length":1923,"saved":false}
